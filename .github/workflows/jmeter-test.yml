name: JMeter Test
on: workflow_dispatch

env:
  TF_CLOUD_ORGANIZATION: "ivn-server"
  TF_WORKSPACE: "gh-actions-demo"
  CONFIG_DIRECTORY: "./"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with: { terraform_version: "1.5.0" }
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Terraform Init
        run: terraform init -input=false
        env: 
          TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform Apply
        run: terraform apply -auto-approve
        env: 
          TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
      - name: Get IPs
        id: ips
        run: |
          echo "master_ip=$(terraform output -raw master_ip)" >> $GITHUB_OUTPUT
          echo "slave_ip=$(terraform output -raw slave_ip)" >> $GITHUB_OUTPUT
        env: 
          TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
      - name: Run JMeter
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ steps.ips.outputs.master_ip }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Copying test.jmx"
            scp -o StrictHostKeyChecking=no tests/script.jmx ubuntu@${{ steps.ips.outputs.master_ip }}:/opt/jmeter/bin/
            echo "Updating jmeter.properties"
            sed -i "s/remote_hosts=.*/remote_hosts=${{ steps.ips.outputs.slave_ip }}/" /opt/jmeter/bin/jmeter.properties
            echo "Running JMeter test"
            /opt/jmeter/bin/jmeter -n -t /opt/jmeter/bin/test.jmx -R ${{ steps.ips.outputs.slave_ip }} -l /opt/jmeter/bin/results.jtl
      - name: Collect Results
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ steps.ips.outputs.master_ip }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "/opt/jmeter/bin/results.jtl"
          target: "results/"
      - name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-results
          path: results/results.jtl
      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        env: 
          TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}