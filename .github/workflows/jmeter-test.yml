name: JMeter Test
on: workflow_dispatch

env:
  CONFIG_DIRECTORY: "./"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v5
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: '${{ secrets.TF_USER_AWS_KEY }}'
          aws-secret-access-key: '${{ secrets.TF_USER_AWS_SECRET }}'
          aws-region: eu-central-1
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
      - name: Terraform Apply
        id: apply
        run: |
          terraform init -upgrade
          terraform validate
          terraform plan
          terraform apply -auto-approve
      - name: Get IPs
        id: ips
        run: |
          echo "master_ip=$(terraform output -raw master_ip)" >> $GITHUB_OUTPUT
          echo "slave_ip=$(terraform output -raw slave_ip)" >> $GITHUB_OUTPUT
      - name: Wait for SSH to be ready
        run: |
          echo "Master IP: ${{ steps.ips.outputs.master_ip }}"
          echo "Slave IP: ${{ steps.ips.outputs.slave_ip }}"
          
          echo "Waiting for SSH on master..."
          for i in {1..30}; do
            if nc -z -w 5 ${{ steps.ips.outputs.master_ip }} 22; then
              echo "Master SSH is ready!"
              break
            fi
            echo "Attempt $i: Master not ready yet..."
            sleep 10
          done
          
          echo "Waiting for SSH on slave..."
          for i in {1..30}; do
            if nc -z -w 5 ${{ steps.ips.outputs.slave_ip }} 22; then
              echo "Slave SSH is ready!"
              break
            fi
            echo "Attempt $i: Slave not ready yet..."
            sleep 10
          done
      - name: Run JMeter
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ steps.ips.outputs.master_ip }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "=== Installing JMeter ==="
            wget -q https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.6.3.tgz
            sudo tar -xzf apache-jmeter-5.6.3.tgz -C /opt
            sudo ln -sf /opt/apache-jmeter-5.6.3 /opt/jmeter

            echo "Copying the script"
            scp -o StrictHostKeyChecking=no tests/script.jmx ubuntu@${{ steps.ips.outputs.master_ip }}:/opt/jmeter/bin/
            echo "Updating jmeter.properties"
            sed -i "s/remote_hosts=.*/remote_hosts=${{ steps.ips.outputs.slave_ip }}/" /opt/jmeter/bin/jmeter.properties
            echo "Running JMeter test"
            /opt/jmeter/bin/jmeter -n -t /opt/jmeter/bin/test.jmx -R ${{ steps.ips.outputs.slave_ip }} -l /opt/jmeter/bin/results.jtl
      - name: Collect Results
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ steps.ips.outputs.master_ip }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "/opt/jmeter/bin/results.jtl"
          target: "results/"
      - name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-results
          path: results/results.jtl
      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        env: 
          TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}